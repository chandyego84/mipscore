$date
	Wed Apr 12 19:23:43 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module im_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var integer 32 # counter [31:0] $end
$scope module taylor $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 10 $ nextPc [9:0] $end
$var wire 32 % nextInst [31:0] $end
$var reg 32 & inst [31:0] $end
$var reg 10 ' pc [9:0] $end
$scope module fetchBlock $end
$var wire 32 ( inst [31:0] $end
$var wire 10 ) pc [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 )
b100000000100000000000000000001 (
b0 '
bx &
b100000000100000000000000000001 %
b1 $
b0 #
0"
0!
$end
#5
b10 $
b100000000100000000000000000110 %
b100000000100000000000000000110 (
b1 '
b1 )
b100000000100000000000000000001 &
b1 #
1!
#10
0!
#15
b10 #
b11 $
b1001010100100100000100000 %
b1001010100100100000100000 (
b10 '
b10 )
b100000000100000000000000000110 &
1!
#20
0!
#25
b100 $
b1001010100100100000100010 %
b1001010100100100000100010 (
b11 '
b11 )
b1001010100100100000100000 &
b11 #
1!
#30
0!
#35
b100 #
b101 $
b100 '
b100 )
b1001010100100100000100010 &
1!
#40
0!
#45
b110 $
b10001001010100000000000101010 %
b10001001010100000000000101010 (
b101 '
b101 )
b101 #
1!
#50
0!
#55
b110 #
b111 $
b10001001010100000000000101011 %
b10001001010100000000000101011 (
b110 '
b110 )
b10001001010100000000000101010 &
1!
#60
0!
#65
b1000 $
b10001100000010100000000000000000 %
b10001100000010100000000000000000 (
b111 '
b111 )
b10001001010100000000000101011 &
b111 #
1!
#70
0!
#75
b1000 #
b1001 $
b110100111001110000000011111111 %
b110100111001110000000011111111 (
b1000 '
b1000 )
b10001100000010100000000000000000 &
1!
#80
0!
#85
b1010 $
bx %
bx (
b1001 '
b1001 )
b110100111001110000000011111111 &
b1001 #
1!
#90
0!
#95
b1011 $
b1010 '
b1010 )
bx &
1!
