$date
	Wed Apr 12 20:07:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module im_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var integer 32 # counter [31:0] $end
$scope module taylor $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 6 $ opcode [5:0] $end
$var wire 10 % nextPc [9:0] $end
$var wire 32 & nextInst [31:0] $end
$var reg 32 ' inst [31:0] $end
$var reg 10 ( pc [9:0] $end
$scope module controller $end
$var wire 6 ) opcode [5:0] $end
$var reg 2 * aluOp [1:0] $end
$var reg 1 + aluSrc $end
$var reg 1 , branch $end
$var reg 1 - jump $end
$var reg 1 . memRead $end
$var reg 1 / memToReg $end
$var reg 1 0 memWrite $end
$var reg 1 1 regDest $end
$var reg 1 2 regWrite $end
$upscope $end
$scope module fetchBlock $end
$var wire 32 3 inst [31:0] $end
$var wire 10 4 pc [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4
b100000000100000000000000000001 3
x2
x1
x0
x/
x.
x-
x,
x+
bx *
bx )
b0 (
bx '
b100000000100000000000000000001 &
b1 %
bx $
b0 #
0"
0!
$end
#5
0,
0-
0/
0.
00
b0 *
1+
12
01
b1000 $
b1000 )
b10 %
b1001010100100100000100000 &
b1001010100100100000100000 3
b1 (
b1 4
b100000000100000000000000000001 '
b1 #
1!
#10
0!
#15
0+
11
b0 $
b0 )
b10 #
b11 %
b100000000100000000000000000110 &
b100000000100000000000000000110 3
b10 (
b10 4
b1001010100100100000100000 '
1!
#20
0!
#25
1+
01
b1000 $
b1000 )
b100 %
b1001010100100100000100010 &
b1001010100100100000100010 3
b11 (
b11 4
b100000000100000000000000000110 '
b11 #
1!
#30
0!
#35
0+
11
b0 $
b0 )
b100 #
b101 %
b10001001010100000000000101010 &
b10001001010100000000000101010 3
b100 (
b100 4
b1001010100100100000100010 '
1!
#40
0!
#45
1,
b1 *
02
01
b100 $
b100 )
b110 %
b1001010100100100000100010 &
b1001010100100100000100010 3
b101 (
b101 4
b10001001010100000000000101010 '
b101 #
1!
#50
0!
#55
0,
b0 *
12
11
b0 $
b0 )
b110 #
b111 %
b10001001010100000000000101011 &
b10001001010100000000000101011 3
b110 (
b110 4
b1001010100100100000100010 '
1!
#60
0!
#65
1,
b1 *
02
01
b100 $
b100 )
b1000 %
b10001100000010100000000000000000 &
b10001100000010100000000000000000 3
b111 (
b111 4
b10001001010100000000000101011 '
b111 #
1!
#70
0!
#75
0,
1/
1.
b0 *
1+
12
b100011 $
b100011 )
b1000 #
b1001 %
b1000 (
b1000 4
b10001100000010100000000000000000 '
1!
#80
0!
#85
b1010 %
bx &
bx 3
b1001 (
b1001 4
b1001 #
1!
#90
0!
#95
bx $
bx )
b1011 %
b1010 (
b1010 4
bx '
1!
